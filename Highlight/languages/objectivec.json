{"keywords":{"keyword":"int float while char export sizeof typedef const struct for union unsigned long volatile static bool mutable if do return goto void enum else break extern asm case short default double register explicit signed typename this switch continue wchar_t inline readonly assign self synchronized id nonatomic super unichar IBOutlet IBAction strong weak @private @protected @public @try @property @end @throw @catch @finally @synthesize @dynamic @selector @optional @required","literal":"false true FALSE TRUE nil YES NO NULL","built_in":"NSString NSDictionary CGRect CGPoint UIButton UILabel UITextView UIWebView MKMapView UISegmentedControl NSObject UITableViewDelegate UITableViewDataSource NSThread UIActivityIndicator UITabbar UIToolBar UIBarButtonItem UIImageView NSAutoreleasePool UITableView BOOL NSInteger CGFloat NSException NSLog NSMutableString NSMutableArray NSMutableDictionary NSURL NSIndexPath CGSize UITableViewCell UIView UIViewController UINavigationBar UINavigationController UITabBarController UIPopoverController UIPopoverControllerDelegate UIImage NSNumber UISearchBar NSFetchedResultsController NSFetchedResultsChangeType UIScrollView UIScrollViewDelegate UIEdgeInsets UIColor UIFont UIApplication NSNotFound NSNotificationCenter NSNotification UILocalNotification NSBundle NSFileManager NSTimeInterval NSDate NSCalendar NSUserDefaults UIWindow NSRange NSArray NSError NSURLRequest NSURLConnection UIInterfaceOrientation MPMoviePlayerController dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"},"lexemes":"[a-zA-Z@][a-zA-Z0-9_]*","illegal":"</","contains":[{"className":"comment","begin":"//","end":"$"},{"className":"comment","begin":"/\\*","end":"\\*/"},{"className":"number","begin":"(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)","relevance":0},{"className":"string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0}]},{"className":"string","begin":"'","end":"[^\\\\]'","illegal":"[^\\\\][^']"},{"className":"preprocessor","begin":"#import","end":"$","contains":[{"className":"title","begin":"\"","end":"\""},{"className":"title","begin":"<","end":">"}]},{"className":"preprocessor","begin":"#","end":"$"},{"className":"class","begin":"(@interface|@class|@protocol|@implementation)\\b","end":"({|$)","keywords":"@interface @class @protocol @implementation","lexemes":"[a-zA-Z@][a-zA-Z0-9_]*","contains":[{"className":"title","begin":"[a-zA-Z_][a-zA-Z0-9_]*","relevance":0}]},{"className":"variable","begin":"\\.[a-zA-Z_][a-zA-Z0-9_]*","relevance":0}]}
