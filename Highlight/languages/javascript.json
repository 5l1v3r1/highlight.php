{"keywords":{"keyword":"in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const","literal":"true false null undefined NaN Infinity"},"contains":[{"className":"string","begin":"'","end":"'","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0}],"relevance":0},{"className":"string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"$ref":"#contains.0.contains.0"}],"relevance":0},{"className":"comment","begin":"//","end":"$"},{"className":"comment","begin":"/\\*","end":"\\*/"},{"className":"number","begin":"(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)","relevance":0},{"begin":"(!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|\\.|-|-=|/|/=|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~|\\b(case|return|throw)\\b)\\s*","keywords":"return throw case","contains":[{"$ref":"#contains.2"},{"$ref":"#contains.3"},{"className":"regexp","begin":"\\/","end":"\\/[gim]*","illegal":"\\n","contains":[{"$ref":"#contains.0.contains.0"},{"begin":"\\[","end":"\\]","relevance":0,"contains":[{"$ref":"#contains.0.contains.0"}]}]},{"begin":"<","end":">;","subLanguage":"xml"}],"relevance":0},{"className":"function","beginWithKeyword":true,"end":"{","keywords":"function","contains":[{"className":"title","begin":"[A-Za-z$_][0-9A-Za-z$_]*"},{"className":"params","begin":"\\(","end":"\\)","contains":[{"$ref":"#contains.2"},{"$ref":"#contains.3"}],"illegal":"[\"'\\(]"}],"illegal":"\\[|%"}]}
