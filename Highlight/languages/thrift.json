{"keywords":{"keyword":"namespace const typedef struct enum service exception void oneway set list map required optional","built_in":"bool byte i16 i32 i64 double string binary","literal":"true false"},"contains":[{"className":"string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"constant","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0},{"className":"constant","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0}]},{"className":"number","begin":"\\b\\d+(\\.\\d+)?","relevance":0},{"className":"comment","begin":"//","end":"$","contains":[{"begin":"\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\\b"},{"className":"label","begin":"XXX","end":"$","endsWithParent":true,"relevance":0},{"className":"label","begin":"XXX","end":"$","endsWithParent":true,"relevance":0}]},{"className":"comment","begin":"/\\*","end":"\\*/","contains":[{"$ref":"#contains.2.contains.0"},{"$ref":"#contains.2.contains.1"},{"$ref":"#contains.2.contains.2"}]},{"className":"class","beginKeywords":"struct enum service exception","end":"\\{","illegal":"\\n","contains":[{"className":"title","begin":"[a-zA-Z][a-zA-Z0-9_]*","relevance":0,"starts":{"endsWithParent":true,"excludeEnd":true}}]},{"className":"stl_container","begin":"\\b(set|list|map)\\s*<","end":">","keywords":"bool byte i16 i32 i64 double string binary","contains":["self"]}]}
