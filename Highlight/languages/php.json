{"case_insensitive":true,"lexems":"[a-zA-Z_][a-zA-Z0-9_]*","keywords":"and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return implements parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try this switch continue endfor endif declare unset true false namespace trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally","contains":[{"className":"comment","begin":"//","end":"$"},{"className":"comment","begin":"#","end":"$"},{"className":"comment","begin":"/\\*","end":"\\*/","contains":[{"className":"phpdoc","begin":"\\s@[A-Za-z]+"}]},{"className":"comment","begin":"__halt_compiler.+?;","endsWithParent":true,"keywords":"__halt_compiler","lexems":"[a-zA-Z_][a-zA-Z0-9_]*"},{"className":"string","begin":"<<<['\"]?\\w+['\"]?$","end":"^\\w+;","contains":[{"begin":"\\\\[\\s\\S]","relevance":0}]},{"className":"preprocessor","begin":"<\\?php","relevance":10},{"className":"preprocessor","begin":"\\?>"},{"className":"variable","begin":"\\$+[a-zA-Z_-ÿ][a-zA-Z0-9_-ÿ]*"},{"className":"function","beginWithKeyword":true,"end":"{","keywords":"function","illegal":"\\$|\\[|%","contains":[{"className":"title","begin":"[a-zA-Z_][a-zA-Z0-9_]*"},{"className":"params","begin":"\\(","end":"\\)","contains":["self",{"$ref":"#contains.7"},{"className":"comment","begin":"/\\*","end":"\\*/"},{"className":"string","begin":"'","end":"'","illegal":null,"contains":[{"$ref":"#contains.4.contains.0"}],"relevance":0},{"className":"string","begin":"\"","end":"\"","illegal":null,"contains":[{"$ref":"#contains.4.contains.0"}],"relevance":0},{"className":"string","begin":"b\"","end":"\"","contains":[{"$ref":"#contains.4.contains.0"}]},{"className":"string","begin":"b'","end":"'","contains":[{"$ref":"#contains.4.contains.0"}]},{"className":"number","begin":"\\b(0b[01]+)","relevance":0},{"className":"number","begin":"(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)","relevance":0}]}]},{"className":"class","beginWithKeyword":true,"end":"{","keywords":"class","illegal":"[:\\(\\$]","contains":[{"beginWithKeyword":true,"endsWithParent":true,"keywords":"extends","contains":[{"$ref":"#contains.8.contains.0"}]},{"$ref":"#contains.8.contains.0"}]},{"begin":"=>"},{"$ref":"#contains.8.contains.1.contains.3"},{"$ref":"#contains.8.contains.1.contains.4"},{"$ref":"#contains.8.contains.1.contains.5"},{"$ref":"#contains.8.contains.1.contains.6"},{"$ref":"#contains.8.contains.1.contains.7"},{"$ref":"#contains.8.contains.1.contains.8"}]}
