<?LassoScript
/* Lasso 8 */
  local('query' = 'SELECT * FROM `'+var:'table'+'` WHERE `id` > 10
    ORDER BY `Name` LIMIT 30');
  Inline: -Username=$DBuser, -Password=$DBpass, -Database=$DBname, -sql=#query;
    var("class.name" = (found_count != 0 ? `subtotal` | `nonefound`));
    records;
      output: ?><tr>[loop_count]</tr><?=;
    /records;
  /Inline;
?><div class="[$class.name]">[found_count]</div>
[noprocess] causes [delimiters] to be skipped until the next [/noprocess]
<?lasso
/* Lasso 9 */
  define strings_combine(value::string, ...other)::string => {
    local(result = #value->append(#other->asString))
    return #result
  }
  /**! descriptive text */
  define person => type {
    data name::string, protected nickname
    data birthdate::date
    data private ssn = null
    public showName() => return .'name'
    protected fullName() => '"' + .nickname + '"' + .'name'
    public ssnListed => .ssn ? true | false
  }
  define person->name=(value) => {
    .'name' = #value
    return self->'name'
  }
  // query expression
  with n in array(-1, 0xABCD, 3.14159e14)
  let swapped = pair(#n->second, #n->first)
  group #swapped by #n->first into t
  let key = #t->key
  order by #key
  select pair(#key, #t)
  do {^
    #n->upperCase
  ^}
?>

